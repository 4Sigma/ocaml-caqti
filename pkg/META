description = "Cooperative-threaded access to relational data"
version = "%%VERSION_NUM%%"
requires = "calendar dynlink findlib uri"
archive(byte) = "caqti.cma"
archive(native) = "caqti.cmxa"
plugin(byte) = "caqti.cma"
plugin(native) = "caqti.cmxs"
exists_if = "caqti.cma"

package "async" (
  description = "Async instance of Caqti"
  version = "%%VERSION_NUM%%"
  requires = "caqti, core, async"
  archive(byte) = "caqti-async.cma"
  archive(native) = "caqti-async.cmxa"
  plugin(byte) = "caqti-async.cma"
  plugin(native) = "caqti-async.cmxs"
  exists_if = "caqti-async.cma"
)

package "lwt" (
  description = "Lwt instance of Caqti"
  version = "%%VERSION_NUM%%"
  requires = "caqti lwt lwt.preemptive"
  archive(byte) = "caqti-lwt.cma"
  archive(native) = "caqti-lwt.cmxa"
  plugin(byte) = "caqti-lwt.cma"
  plugin(native) = "caqti-lwt.cmxs"
  exists_if = "caqti-lwt.cma"
)

package "caqtus-mariadb" (
  description = "MariaDB backend for Caqti"
  version = "%%VERSION_NUM%%"
  requires = "calendar mariadb uri"
  archive(byte) = "caqtus-mariadb.cma"
  archive(native) = "caqtus-mariadb.cmxa"
  plugin(byte) = "caqtus-mariadb.cma"
  plugin(native) = "caqtus-mariadb.cmxs"
  exists_if = "caqtus-mariadb.cma"
)

package "caqtus-postgresql" (
  description = "PostgreSQL backend for Caqti"
  version = "%%VERSION_NUM%%"
  requires = "calendar postgresql uri"
  archive(byte) = "caqtus-postgresql.cma"
  archive(native) = "caqtus-postgresql.cmxa"
  plugin(byte) = "caqtus-postgresql.cma"
  plugin(native) = "caqtus-postgresql.cmxs"
  exists_if = "caqtus-postgresql.cma"
)

package "caqtus-sqlite3" (
  description = "Sqlite backend for Caqti"
  version = "%%VERSION_NUM%%"
  requires = "calendar sqlite3 uri"
  archive(byte) = "caqtus-sqlite3.cma"
  archive(native) = "caqtus-sqlite3.cmxa"
  plugin(byte) = "caqtus-sqlite3.cma"
  plugin(native) = "caqtus-sqlite3.cmxs"
  exists_if = "caqtus-sqlite3.cma"
)
